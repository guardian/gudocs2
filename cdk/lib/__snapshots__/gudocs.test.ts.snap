// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The StarterTypescriptLambda stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuDocs",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuStringParameter",
      "GuDistributionBucketParameter",
      "GuLambdaFunction",
      "GuApiGatewayWithLambdaByPath",
      "GuScheduledLambda",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "RestApiEndpoint0551178A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "S3BucketName": {
      "Default": "/TEST/interactives/gudocs/s3bucket",
      "Description": "The bucket used to store docs",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
  },
  "Resources": {
    "RestApi0C43BF4B": {
      "Properties": {
        "Name": "playground-TEST-testing",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "RestApiAccount7C83CF5A": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "RestApi0C43BF4B",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiCloudWatchRoleE3ED6605": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "RestApiDeployment180EC5032ccf98fdb6dd942f3a2df38053daf327": {
      "DependsOn": [
        "RestApiGET0F59260B",
        "RestApipublishPOST47D1FC78",
        "RestApipublishEFC5B6CE",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "RestApiDeploymentStageprod3855DE66": {
      "DependsOn": [
        "RestApiAccount7C83CF5A",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "RestApiDeployment180EC5032ccf98fdb6dd942f3a2df38053daf327",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "RestApiGET0F59260B": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "serverlessexpress345C9909",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApiGETApiPermissionGuDocsAPIRestApi65AC27F3GET72D119D5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "serverlessexpress345C9909",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApiGETApiPermissionTestGuDocsAPIRestApi65AC27F3GETC37C99B0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "serverlessexpress345C9909",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/GET/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipublishEFC5B6CE": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId",
          ],
        },
        "PathPart": "publish",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "RestApipublishPOST47D1FC78": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "serverlessexpress345C9909",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "RestApipublishEFC5B6CE",
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "RestApipublishPOSTApiPermissionGuDocsAPIRestApi65AC27F3POSTpublishB24E9366": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "serverlessexpress345C9909",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/",
              {
                "Ref": "RestApiDeploymentStageprod3855DE66",
              },
              "/POST/publish",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RestApipublishPOSTApiPermissionTestGuDocsAPIRestApi65AC27F3POSTpublishEC43F890": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "serverlessexpress345C9909",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "RestApi0C43BF4B",
              },
              "/test-invoke-stage/POST/publish",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TableCD117FA1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "key",
            "AttributeType": "S",
          },
          {
            "AttributeName": "type",
            "AttributeType": "S",
          },
          {
            "AttributeName": "lastModified",
            "AttributeType": "N",
          },
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "last-modified",
            "KeySchema": [
              {
                "AttributeName": "type",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "lastModified",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5,
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "key",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
        "TableName": "playground-TEST-gudocs",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "gudocs860B986D": {
      "DependsOn": [
        "gudocsServiceRoleDefaultPolicyE352211E",
        "gudocsServiceRole57A31E68",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "playground/TEST/gudocs-schedule/gudocs2.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "gudocs-schedule",
            "STACK": "playground",
            "STAGE": "TEST",
            "Stage": "TEST",
          },
        },
        "FunctionName": "gudocs-schedule-TEST",
        "Handler": "index.scheduleHandler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "gudocsServiceRole57A31E68",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-schedule",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "gudocsSecurityGroupA1732EC1",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "gudocsSecurityGroupA1732EC1": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function GuDocsAPIgudocs86D0A25F",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-schedule",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "gudocsServiceRole57A31E68": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-schedule",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "gudocsServiceRoleDefaultPolicyE352211E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/playground/TEST/gudocs-schedule/gudocs2.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs-schedule",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs-schedule/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3BucketName",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParametersByPath",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TableCD117FA1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TableCD117FA1",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "gudocsServiceRoleDefaultPolicyE352211E",
        "Roles": [
          {
            "Ref": "gudocsServiceRole57A31E68",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "gudocsgudocscron001020AllowEventRuleGuDocsAPIgudocs86D0A25FF1B79F30": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "gudocs860B986D",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "gudocsgudocscron001020C113ADFA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "gudocsgudocscron001020C113ADFA": {
      "Properties": {
        "ScheduleExpression": "cron(00 10 ? * 2 *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "gudocs860B986D",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "serverlessexpress345C9909": {
      "DependsOn": [
        "serverlessexpressServiceRoleDefaultPolicy84DAB9CD",
        "serverlessexpressServiceRoleE0824EA0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "playground/TEST/gudocs-serverless-express/gudocs2.zip",
        },
        "Environment": {
          "Variables": {
            "APP": "gudocs-serverless-express",
            "STACK": "playground",
            "STAGE": "TEST",
            "Stage": "TEST",
          },
        },
        "FunctionName": "gudocs-serverless-express-TEST",
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "serverlessexpressServiceRoleE0824EA0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-serverless-express",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "serverlessexpressSecurityGroup2E1CF725",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": {
            "Ref": "PrivateSubnets",
          },
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "serverlessexpressSecurityGroup2E1CF725": {
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function GuDocsAPIserverlessexpress08EA6F58",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-serverless-express",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "serverlessexpressServiceRoleDefaultPolicy84DAB9CD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/playground/TEST/gudocs-serverless-express/gudocs2.zip",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs-serverless-express",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs-serverless-express/*",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3BucketName",
                    },
                    "/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParametersByPath",
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/playground/gudocs/*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TableCD117FA1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TableCD117FA1",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "serverlessexpressServiceRoleDefaultPolicy84DAB9CD",
        "Roles": [
          {
            "Ref": "serverlessexpressServiceRoleE0824EA0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "serverlessexpressServiceRoleE0824EA0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "gudocs-serverless-express",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/gudocs2",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
